# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pipline CI/CD de Java con Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run tests with Maven
        run: mvn test
  deploy:
      needs: build-and-tests
      runs-on: ubuntu-latest
      environment: production
      steps:
        - name: Set up AWS credentials
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region us-east-1
        - name: Deploy to AWS
          env:
            EC2_HOST: ${{ secrets.EC2_HOST }}
            EC2_USER: ${{ secrets.EC2_USER }}
            EC2_KEY: ${{ secrets.EC2_KEY }}
          run: |
            echo "${{ secrets.EC2_KEY }}" > integracion_api.pem
            chmod 400 integracion_api.pem
            scp -o StrictHostKeyChecking=no -i integracion_api.pem target/*.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app.jar
            ssh -o StrictHostKeyChecking=no -i integracion_api.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
              pkill -f 'java -jar' || true
              nohup java -jar /home/${{ secrets.EC2_USER }}/app.jar > /dev/null 2>&1 &
            EOF
            rm integracion_api.pem
